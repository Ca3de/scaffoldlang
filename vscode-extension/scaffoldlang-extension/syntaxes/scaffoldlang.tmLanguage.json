{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "ScaffoldLang",
  "scopeName": "source.scaffoldlang",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#types"
    },
    {
      "include": "#functions"
    },
    {
      "include": "#operators"
    },
    {
      "include": "#emojis"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.scaffoldlang",
          "begin": "//",
          "end": "$",
          "captures": {
            "0": {
              "name": "punctuation.definition.comment.scaffoldlang"
            }
          }
        },
        {
          "name": "comment.block.scaffoldlang",
          "begin": "/\\*",
          "end": "\\*/",
          "captures": {
            "0": {
              "name": "punctuation.definition.comment.scaffoldlang"
            }
          }
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.scaffoldlang",
          "match": "\\b(if|else|while|for|return|break|continue)\\b"
        },
        {
          "name": "keyword.declaration.scaffoldlang",
          "match": "\\b(app|fun|let|const)\\b"
        },
        {
          "name": "keyword.operator.scaffoldlang",
          "match": "\\b(and|or|not)\\b"
        },
        {
          "name": "constant.language.scaffoldlang",
          "match": "\\b(true|false|null|undefined)\\b"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.scaffoldlang",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.scaffoldlang",
              "match": "\\\\."
            }
          ]
        },
        {
          "name": "string.quoted.single.scaffoldlang",
          "begin": "'",
          "end": "'",
          "patterns": [
            {
              "name": "constant.character.escape.scaffoldlang",
              "match": "\\\\."
            }
          ]
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.float.scaffoldlang",
          "match": "\\b\\d+\\.\\d+\\b"
        },
        {
          "name": "constant.numeric.integer.scaffoldlang",
          "match": "\\b\\d+\\b"
        }
      ]
    },
    "types": {
      "patterns": [
        {
          "name": "storage.type.scaffoldlang",
          "match": "\\b(void|str|int|float|bool|char)\\b"
        }
      ]
    },
    "functions": {
      "patterns": [
        {
          "name": "entity.name.function.scaffoldlang",
          "match": "\\b(print|toString|main)\\b"
        },
        {
          "name": "entity.name.function.call.scaffoldlang",
          "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*(?=\\()"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.arithmetic.scaffoldlang",
          "match": "\\+|\\-|\\*|\\/|\\%"
        },
        {
          "name": "keyword.operator.comparison.scaffoldlang",
          "match": "==|!=|<|>|<=|>="
        },
        {
          "name": "keyword.operator.assignment.scaffoldlang",
          "match": "="
        },
        {
          "name": "keyword.operator.logical.scaffoldlang",
          "match": "&&|\\|\\||!"
        }
      ]
    },
    "emojis": {
      "patterns": [
        {
          "name": "constant.character.emoji.scaffoldlang",
          "match": "🏎️|🚀|⚡|🧮|🏥|💰|🎮|🔍|⚙️|🌟|✨|🎯|🏆|🔧|📊|💎|🧙‍♂️|🐉|⚔️|🎉|💀"
        }
      ]
    }
  }
} 